# location [ = | ~ | ~* | ^~ ] uri { ... }

# =  精确匹配。优先级最高
# ^~ 前缀匹配，优先级其次
# ~  正则匹配，优先级再次 (~* 只是不区分大小写，不单列)
# /  通用前缀匹配，优先级再次

server {
    listen       80;
    server_name  localhost;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    # 主要是为了匹配 sheng 该路径，因为没有后缀名，无法确认其 content-type，会自动下载
    # 因此这里采用 text/plain，则不会自动下载
    default_type text/plain;

    location / {
      expires -1;

      add_header X-Config A;
      # try_files  $uri $uri.html $uri/index.html /index.html;  
    }

    # (精准匹配)访问 http://localhost:8002/about.html，走该匹配路径
    location = /about.html {
      add_header X-Location =/about.html;
      add_header X-Config B;
    }

    # (精准匹配)访问 http://localhost:8002/hello，走该匹配路径
    location = /hello {
      add_header X-Location =/hello;
      add_header X-Config C;
    }

    # ~ 开启正则匹配
    # 该正则表示以 /sheng 开头的路径
    # 访问 http://localhost:8002/shengJacky，走该匹配路径，访问成功
    # 访问 http://localhost:8002/sheng，走该匹配路径，访问成功
    location  ~ ^/sheng {
      add_header X-Config E;
    }
}